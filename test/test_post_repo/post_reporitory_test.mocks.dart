// Mocks generated by Mockito 5.3.2 from annotations
// in learn_clean_arch/test/test_post_repo/post_reporitory_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:learn_clean_arch/features/posts/data/datasources/local/post_local_datasource.dart'
    as _i6;
import 'package:learn_clean_arch/features/posts/data/datasources/remote/post_remote_datasource.dart'
    as _i4;
import 'package:learn_clean_arch/features/posts/data/models/post_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostModel_0 extends _i1.SmartFake implements _i2.PostModel {
  _FakePostModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUnit_1 extends _i1.SmartFake implements _i3.Unit {
  _FakeUnit_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRemoteDataSource extends _i1.Mock
    implements _i4.PostRemoteDataSource {
  MockPostRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.PostModel>> getPosts() => (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
        ),
        returnValue: _i5.Future<List<_i2.PostModel>>.value(<_i2.PostModel>[]),
      ) as _i5.Future<List<_i2.PostModel>>);
  @override
  _i5.Future<_i2.PostModel> getPostDetails(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getPostDetails,
          [id],
        ),
        returnValue: _i5.Future<_i2.PostModel>.value(_FakePostModel_0(
          this,
          Invocation.method(
            #getPostDetails,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.PostModel>);
}

/// A class which mocks [PostLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostLocalDataSource extends _i1.Mock
    implements _i6.PostLocalDataSource {
  MockPostLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.PostModel>> getCachedPosts() => (super.noSuchMethod(
        Invocation.method(
          #getCachedPosts,
          [],
        ),
        returnValue: _i5.Future<List<_i2.PostModel>>.value(<_i2.PostModel>[]),
      ) as _i5.Future<List<_i2.PostModel>>);
  @override
  _i5.Future<_i3.Unit> cachePosts(List<_i2.PostModel>? postModels) =>
      (super.noSuchMethod(
        Invocation.method(
          #cachePosts,
          [postModels],
        ),
        returnValue: _i5.Future<_i3.Unit>.value(_FakeUnit_1(
          this,
          Invocation.method(
            #cachePosts,
            [postModels],
          ),
        )),
      ) as _i5.Future<_i3.Unit>);
}
